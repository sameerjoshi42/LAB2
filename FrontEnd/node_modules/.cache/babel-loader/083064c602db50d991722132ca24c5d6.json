{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\Desktop\\\\React\\\\UberEats\\\\Frontend\\\\src\\\\components\\\\CustomerLanding.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport Navbar from './Navbar';\nimport { useEffect, useState } from \"react\";\nimport Axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerLanding = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [RestroInfo, setRestroInfo] = useState([]);\n  const [CustLocInfo, setCustLocInfo] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [restroDishes, setRestroDishes] = useState([]);\n  useEffect(() => {\n    const url = \"http://localhost:3002/getCustLocation\";\n    Axios.post(url, {\n      name: sessionStorage.getItem('cust_name')\n    }).then(response => {\n      setCustLocInfo(response.data);\n    });\n  }, []);\n  var cust_location;\n  CustLocInfo.map(val => {\n    cust_location = val.City;\n  });\n  sessionStorage.setItem('cust_location', cust_location);\n  useEffect(() => {\n    const url = \"http://localhost:3002/getAllRestaurants\";\n    Axios.get(url).then(response => {\n      setRestroInfo(response.data);\n    });\n  }, []);\n  var custLocRestro = RestroInfo.filter(val => val.Rest_Location === sessionStorage.getItem('cust_location'));\n  var notCustLocRestro = RestroInfo.filter(val => val.Rest_Location != sessionStorage.getItem('cust_location'));\n  custLocRestro.push(...notCustLocRestro);\n  var restroMap = new Map();\n\n  function getRestro(restroNm) {\n    _s();\n\n    useEffect(() => {\n      const url = \"http://localhost:3002/getDishesByRestro\";\n      Axios.post(url, {\n        name: restroNm\n      }).then(response => {\n        setRestroDishes(response.data);\n      });\n    }, []);\n    restroMap.set(restroNm, restroDishes);\n    restroDishes.splice(0, restroDishes.length);\n  }\n\n  _s(getRestro, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  custLocRestro.forEach(val => {\n    getRestro(val);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      sendSearch: word => {\n        setSearch(word);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), custLocRestro.filter(val => {\n      if (search == \"\") {\n        return val;\n      } else if (val.Rest_Name.toLowerCase().includes(search.toLowerCase())) {\n        return val;\n      } else if (val.Rest_Location.toLowerCase().includes(search.toLowerCase())) {\n        return val;\n      }\n\n      var tempdishes = restroMap.get(val);\n      tempdishes.filter(val1 => {\n        if (val1.toLowerCase().includes(search.toLowerCase())) {\n          return val;\n        }\n      });\n    }).map(val => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: val.Rest_Image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: \"/viewrestro\",\n              state: {\n                val\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: val.Rest_Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: val.Rest_Desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: val.Rest_Location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"----------------------------------------------------\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(CustomerLanding, \"a1/UjnafZQPlbMhnVH2hJBLdR6M=\");\n\n_c = CustomerLanding;\nexport default CustomerLanding;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerLanding\");","map":{"version":3,"sources":["C:/Users/INTEL/Desktop/React/UberEats/Frontend/src/components/CustomerLanding.js"],"names":["React","Navbar","useEffect","useState","Axios","Link","CustomerLanding","RestroInfo","setRestroInfo","CustLocInfo","setCustLocInfo","search","setSearch","restroDishes","setRestroDishes","url","post","name","sessionStorage","getItem","then","response","data","cust_location","map","val","City","setItem","get","custLocRestro","filter","Rest_Location","notCustLocRestro","push","restroMap","Map","getRestro","restroNm","set","splice","length","forEach","word","Rest_Name","toLowerCase","includes","tempdishes","val1","Rest_Image","pathname","state","Rest_Desc"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport Navbar from './Navbar';\r\nimport { useEffect, useState } from \"react\";\r\nimport Axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CustomerLanding = () => {\r\n\r\n   \r\n    const[RestroInfo,setRestroInfo]=useState([])\r\n\r\n    const[CustLocInfo,setCustLocInfo]=useState([])\r\n    const[search,setSearch]=useState(\"\")\r\n    const[restroDishes,setRestroDishes]=useState([])\r\n    useEffect(()=>{\r\n        const url =\"http://localhost:3002/getCustLocation\";\r\n        Axios.post(url,{name:sessionStorage.getItem('cust_name')\r\n        },).then((response)=>{\r\n            setCustLocInfo(response.data);\r\n        })\r\n    },[])\r\n    \r\n\r\n    var cust_location;\r\n    CustLocInfo.map((val)=>{\r\n        cust_location=val.City;\r\n\r\n    })\r\n    sessionStorage.setItem('cust_location',cust_location);\r\n    \r\n    useEffect(()=>{\r\n        const url =\"http://localhost:3002/getAllRestaurants\";\r\n        Axios.get(url).then((response)=>{\r\n            setRestroInfo(response.data);\r\n        })\r\n    },[])\r\n    var custLocRestro=RestroInfo.filter(val=>val.Rest_Location===sessionStorage.getItem('cust_location'));\r\n    var notCustLocRestro=RestroInfo.filter(val=>val.Rest_Location!=sessionStorage.getItem('cust_location'));\r\n\r\n    custLocRestro.push(...notCustLocRestro);\r\n\r\n    var restroMap = new Map();\r\n    function getRestro(restroNm){\r\n                useEffect(()=>{\r\n            const url =\"http://localhost:3002/getDishesByRestro\";\r\n            Axios.post(url,{name:restroNm\r\n            },).then((response)=>{\r\n                setRestroDishes(response.data);\r\n            })\r\n        },[])\r\n        restroMap.set(restroNm,restroDishes)\r\n        restroDishes.splice(0, restroDishes.length)\r\n    }\r\n    custLocRestro.forEach((val)=>{\r\n            getRestro(val);\r\n      \r\n        \r\n    })\r\n \r\n    return (\r\n        <div>\r\n            \r\n            <Navbar sendSearch={word=>{setSearch(word)}}/>\r\n            {/* <h1>{search}</h1> */}\r\n           {custLocRestro.filter((val)=>{\r\n               if(search==\"\"){\r\n                   return val;\r\n               }\r\n               else if(val.Rest_Name.toLowerCase().includes(search.toLowerCase())){\r\n                    return val;\r\n               }\r\n               else if(val.Rest_Location.toLowerCase().includes(search.toLowerCase())){\r\n                return val;\r\n           }\r\n           var tempdishes = restroMap.get(val);\r\n           tempdishes.filter((val1)=>{\r\n               if(val1.toLowerCase().includes(search.toLowerCase())){\r\n                   return val;\r\n               }\r\n\r\n           })\r\n               \r\n           }).map\r\n           ((val)=>{\r\n            return (\r\n                <div >\r\n                    <img src={val.Rest_Image} />\r\n                    <h3><strong>Name : </strong>\r\n                    <Link  to={{\r\n                            pathname: \"/viewrestro\",\r\n                            state:{val}\r\n                            }}><strong>{val.Rest_Name}</strong></Link>\r\n                    </h3>\r\n                    \r\n                    <h3><strong>Description : </strong><strong>{val.Rest_Desc}</strong></h3>\r\n                    \r\n                    <h3><strong>Location : </strong><strong>{val.Rest_Location}</strong></h3>\r\n                    <h3>----------------------------------------------------</h3>\r\n                    \r\n                    \r\n                  \r\n                </div>\r\n            );\r\n            \r\n\r\n        })}\r\n  \r\n        \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerLanding\r\n"]},"metadata":{},"sourceType":"module"}